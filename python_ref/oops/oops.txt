-->Two key features: Encapsulation and inheritance

--> Variable holds data
--> Object holds data and functions(code)

--> Every object is called as real entity which has properties and values

Encapsulation: Wrapping up of both properties and methods in a single logical unti is known as encapsulation.

Class:
->Collection of properties and methods into single logical unit
->The instance of the class is known as object
->By default all properties and methods are public
->'.' operator is used to access both properties and methods
->Private properties and methods starts with "__" , cannot be accessed through an object
->Private properties and methods can be accessed through its public method
->Self is a special argument,it holds current object address

Cunstructor:
Destructor:
-> del removes the variables but not the object, it decreases the reference count.

instance variables: Contains data that is unique to each instance
class variable: contains same data for each instance

regular methods: automatically pass the instance as the first argument(self)
class methods: automaticall pass the class as the first argument(cls)
static methods: dont pass anything automatically. Behaves like regular functions except we include them 				in a class
--> If you are not using cls or self variables anywhere then probably you want to check and see if that would be appropriate to use static methods.

special/magic/dunder methods:
-> __repr__, __str__ sepcial methods allow us to change how our objects are printed and displayed



